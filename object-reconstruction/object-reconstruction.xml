<module>
    <!-- module's name should match its executable file's name. -->
    <name>object-reconstruction</name>
    <description> A module to reconstruct in 3D a set of pixel and visualize the reconstruction.</description>
    <version>1.0</version>

    <!-- <arguments> can have multiple <param> tags-->
    <arguments>
        <param desc="Name of the module" default="object-reconstruction"> name</param>
	    <param desc="Robot" default="icub"> robot</param>
        <param desc="Sub-path from \c $ICUB_ROOT/app to the configuration file" default="object-reconstruction"> context </param>
    </arguments>

    <!-- <authors> can have multiple <author> tags. -->
    <authors>
	  <author email="ilaria.gori@iit.it"> Ilaria Gori</author>
	  <author email="tanis.mar@iit.it"> Tanis Mar</author>
    </authors>

     <!-- <data> can have multiple <input> or <output> tags. -->
     <data>
        <!-- input data if available -->
        <input>
            <type>ImageOfPixelRgb</type>
            <port carrier="udp">/object-reconstruction/left:i</port>
            <required>yes</required>
            <priority>no</priority>
            <description> Receives incoming images from the left eye. </description>
        </input>
        <input>
            <type>ImageOfPixelRgb</type>
            <port carrier="udp">/object-reconstruction/right:i</port>
            <required>yes</required>
            <priority>no</priority>
            <description> Receives incoming images from the right eye. </description>
        </input>
        <input port_type="service">
            <type>rpc</type>
            <port carrier="tcp">/object-reconstruction/rpc</port>
            <description> Takes RPC commands</description>
        </input>
        <!-- output data if available -->        
        <output>
            <type>Bottle</type>
            <port>/object-reconstruction/mesh:o</port>
            <description> Sends out the 3D reconstruction as a 'mesh' defined as SurfaceMesh(withBoundingBox) from objects3D library.</description>
        </output>
        <output port_type="service">
            <type>rpc</type>
            <port>/object-reconstruction/segmentation</port>
            <description> Sends out the seed to the segmentation module, and receives the list of pixels belonging to the segmented object blob.</description>
        </output>
    </data>

    <dependencies>
        <computer>
        </computer>
    </dependencies>

    <!-- specific libraries or header files which are used for development -->
    <development>
        <header></header>
        <library>YARP</library>
        <library>objects3D</library>
        <library>minimumBoundingBox</library>
        <library>stereoVision</library>
        <library>OpenCV</library>
        <library>Point Cloud Library.</library>
    </development>

</module>

